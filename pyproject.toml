[build-system]
requires = ["setuptools>=68.1.2", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["loopstructuralmeshing"]

[project]
name = "loopstructuralmeshing"

maintainers = [{ name = "Lachlan Grose", email = "lachlan.grose@monash.edu" }]

dependencies = ["meshpy", "loopstructural", "numpy"]

description = "Interface between meshpy and loopstructural"
keywords = ["geology", "interpolation", "loopstructural"]
readme = "README.md"
license = { file = "LICENSE" }
dynamic = ['version']
requires-python = ">=3.8"
classifiers = []
[project.optional-dependencies]
optionals = []

build = []

docs = []

tests = []

[project.urls]


[tool.setuptools_scm]
# Make sure setuptools uses version based on the last created tag
version_scheme = "post-release"
# Make sure scm doesn't use local scheme version for push to pypi
# (so there isn't a + in the version)
local_scheme = "no-local-version"
write_to = "loopstructuralmeshing/_version_generated.py"
write_to_template = '__version__ = "v{version}"'

[tool.isort]
profile = 'black'
line_length = 100
# Sort by name, don't cluster "from" vs "import"
force_sort_within_sections = true
# Combines "as" imports on the same line
combine_as_imports = true

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ['py39']
exclude = '\.eggs|\.git|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist|node_modules'

[tool.blackdoc]
# From https://numpydoc.readthedocs.io/en/latest/format.html
# Extended discussion: https://github.com/pyvista/pyvista/pull/4129
# The length of docstring lines should be kept to 75 characters to facilitate
# reading the docstrings in text terminals.
line-length = 75

[tool.build_sphinx]
source-dir = 'doc'
build-dir = './doc/build'
all_files = 1

[tool.upload_sphinx]
upload-dir = 'doc/build/html'

[tool.pydocstyle]
match = '(?!coverage).*.py'
convention = "numpy"
add-ignore = ["D404"]

[tool.codespell]
skip = '*.pyc,*.txt,*.gif,*.png,*.jpg,*.ply,*.vtk,*.vti,*.vtu,*.js,*.html,*.doctree,*.ttf,*.woff,*.woff2,*.eot,*.mp4,*.inv,*.pickle,*.ipynb,flycheck*,./.git/*,./.hypothesis/*,*.yml,doc/_build/*,./doc/images/*,./dist/*,*~,.hypothesis*,./doc/examples/*,*.mypy_cache/*,*cover,./tests/tinypages/_build/*,*/_autosummary/*'
quiet-level = 3


[tool.ruff]
exclude = ['.git', 'pycache__', 'build', 'dist', 'doc/examples', 'doc/_build']
external = ["E131", "D102", "D105"]
line-length = 100
indent-width = 4
target-version = 'py39'

[tool.ruff.lint]
ignore = [
    # whitespace before ':'
    "E203",
    # line break before binary operator
    # "W503",
    # line length too long
    "E501",
    # do not assign a lambda expression, use a def
    "E731",
    # too many leading '#' for block comment
    "E266",
    # ambiguous variable name
    "E741",
    # module level import not at top of file
    "E402",
    # Quotes (temporary)
    "Q0",
    # bare excepts (temporary)
    # "B001", "E722",
    "E722",
    # we already check black
    # "BLK100",
    # 'from module import *' used; unable to detect undefined names
    "F403",
]
fixable = ["ALL"]
unfixable = []
extend-select = ["B007", "B010", "C4", "F", "NPY", "PGH004", "RSE", "RUF100"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true
